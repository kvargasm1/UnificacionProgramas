/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulacionunificacionprogramas;

import Pruebas.PruebaSeries;
import Pruebas.pruebaKolmogorov;
import Pruebas.pruebaPromedios;
import Utilidades.Utilidades;
import Utilidades.UtilidadesCongruencialLineal;
import Utilidades.UtilidadesLecuger;
import Utilidades.UtilidadesWichman;
import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import org.omg.CORBA.INTERNAL;

/**
 *
 * @author envydv
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        rbtnCongruencial = new javax.swing.JRadioButton();
        rbtnLecuger = new javax.swing.JRadioButton();
        rbtnWichman = new javax.swing.JRadioButton();
        rbtnOtro = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        lblSemillax = new javax.swing.JLabel();
        txtPeriodo = new javax.swing.JTextField();
        txtSemilla = new javax.swing.JTextField();
        btnProcesar = new javax.swing.JButton();
        lblSemillaY = new javax.swing.JLabel();
        txtSemillay = new javax.swing.JTextField();
        lblSemillaZ = new javax.swing.JLabel();
        txtSemillaZ = new javax.swing.JTextField();
        rbtnPromedios = new javax.swing.JRadioButton();
        rbtnKolmogorov = new javax.swing.JRadioButton();
        rbtnSeries = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(rbtnCongruencial);
        rbtnCongruencial.setText("Congruencial Lineal");
        rbtnCongruencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCongruencialActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnLecuger);
        rbtnLecuger.setText("Lecuger");
        rbtnLecuger.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbtnLecugerStateChanged(evt);
            }
        });
        rbtnLecuger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnLecugerActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnWichman);
        rbtnWichman.setText("Wichman");
        rbtnWichman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnWichmanActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnOtro);
        rbtnOtro.setText("Midsquare");
        rbtnOtro.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbtnOtroStateChanged(evt);
            }
        });
        rbtnOtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnOtroActionPerformed(evt);
            }
        });

        jLabel1.setText("Periodo");

        lblSemillax.setText("Semilla");

        txtSemilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemillaActionPerformed(evt);
            }
        });

        btnProcesar.setText("Procesar");
        btnProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarActionPerformed(evt);
            }
        });

        lblSemillaY.setText("Semilla y");
        lblSemillaY.setEnabled(false);

        txtSemillay.setEnabled(false);
        txtSemillay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemillayActionPerformed(evt);
            }
        });

        lblSemillaZ.setText("Semilla Z");
        lblSemillaZ.setEnabled(false);

        txtSemillaZ.setEnabled(false);
        txtSemillaZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemillaZActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnPromedios);
        rbtnPromedios.setText("Prueba de promedios");
        rbtnPromedios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnPromediosActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnKolmogorov);
        rbtnKolmogorov.setText("Prueba de Kolmogorov");

        rbtnSeries.setText("Prueba Series");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnSeries)
                    .addComponent(rbtnKolmogorov)
                    .addComponent(rbtnPromedios)
                    .addComponent(btnProcesar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rbtnWichman, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtnLecuger, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtnCongruencial, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtnOtro, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSemillax)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSemillaY)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSemillay, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSemillaZ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSemillaZ, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnCongruencial)
                    .addComponent(jLabel1)
                    .addComponent(txtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnLecuger)
                    .addComponent(lblSemillax)
                    .addComponent(txtSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnWichman)
                    .addComponent(lblSemillaY)
                    .addComponent(txtSemillay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnOtro)
                    .addComponent(lblSemillaZ)
                    .addComponent(txtSemillaZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(rbtnPromedios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtnKolmogorov)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnSeries)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnProcesar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSemillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemillaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemillaActionPerformed

    private void btnProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarActionPerformed

        pruebaPromedios promedios = new pruebaPromedios();
        pruebaKolmogorov kolgomorov = new pruebaKolmogorov();
        PruebaSeries pruebasSeries = new PruebaSeries();
        if (rbtnCongruencial.isSelected()) {
            int periodo = Integer.parseInt(txtPeriodo.getText());
            int numero = Integer.parseInt(txtSemilla.getText());
            String[][] aleatorios = new String[periodo][2];
            Double[] numerosAleatorios = new Double[periodo];
            for (int i = 0; i < periodo; i++) {

                UtilidadesCongruencialLineal utilidades = new UtilidadesCongruencialLineal();
                int resultado = utilidades.generaSemilla(numero);
                numero = resultado;
                double aleatorio = utilidades.generalAleatorio(numero);
                aleatorios[i][0] = "" + aleatorio;
                aleatorios[i][1] = "" + resultado;
                numerosAleatorios[i] = aleatorio;

            }
            String[] columnas = {"U",
                "X"};

            JTable table = new JTable(aleatorios, columnas);
            table.setVisible(true);

            JFrame frame = new JFrame("JTable Test Display");

            JPanel panel = new JPanel();
            panel.setLayout(new BorderLayout());

            JScrollPane tableContainer = new JScrollPane(table);

            panel.add(tableContainer, BorderLayout.CENTER);
            frame.getContentPane().add(panel);

            frame.pack();
            frame.setVisible(true);
            if (rbtnPromedios.isSelected()) {
                promedios.prueba(numerosAleatorios);
            } else if (rbtnKolmogorov.isSelected()) {
                kolgomorov.prueba(numerosAleatorios, 1.96, numerosAleatorios.length);
            }else if(rbtnSeries.isSelected()){
                pruebasSeries.prueba(numerosAleatorios, 5, 0.05, numerosAleatorios.length);
            }
        } else if (rbtnLecuger.isSelected()) {
            int periodo = Integer.parseInt(txtPeriodo.getText());
            double semillax = Double.parseDouble(txtSemilla.getText());
            double semillay = Double.parseDouble(txtSemillay.getText());
            String[][] semillas = new String[periodo][4];
            Double[] numerosAleatorios = new Double[periodo];
            for (int i = 0; i < periodo; i++) {

                UtilidadesLecuger utilidades = new UtilidadesLecuger();
                semillax = utilidades.calculaX(semillax);
                semillay = utilidades.calculaY(semillay);
                double semillaZ = utilidades.calculaZ(semillax, semillay);
                double u = utilidades.calculaU(semillaZ);
                semillas[i][0] = "" + semillax;
                semillas[i][1] = "" + semillay;
                semillas[i][2] = "" + semillaZ;
                semillas[i][3] = "" + u;
                numerosAleatorios[i] = u;
            }

            String[] columnas = {"semilla X", "semilla Y", "semilla Z", "U"};
            JTable table = new JTable(semillas, columnas);
            table.setVisible(true);

            JFrame frame = new JFrame("JTable Test Display");

            JPanel panel = new JPanel();
            panel.setLayout(new BorderLayout());

            JScrollPane tableContainer = new JScrollPane(table);

            panel.add(tableContainer, BorderLayout.CENTER);
            frame.getContentPane().add(panel);

            frame.pack();
            frame.setVisible(true);
            if (rbtnPromedios.isSelected()) {
                promedios.prueba(numerosAleatorios);
            } else if (rbtnKolmogorov.isSelected()) {
                kolgomorov.prueba(numerosAleatorios, 1.96, numerosAleatorios.length);
            }else if(rbtnSeries.isSelected()){
                pruebasSeries.prueba(numerosAleatorios, 5, 0.05, numerosAleatorios.length);
            }

        } else if (rbtnWichman.isSelected()) {
            double semillax = Double.parseDouble(txtSemilla.getText());
            double semillay = Double.parseDouble(txtSemillay.getText());
            double semillaz = Double.parseDouble(txtSemillaZ.getText());
            int periodo = Integer.parseInt(txtPeriodo.getText());
            Double[] numerosAleatorios = new Double[periodo];
            String[][] semillas = new String[periodo][4];
            for (int i = 0; i < periodo; i++) {

                UtilidadesWichman utilidades = new UtilidadesWichman();
                semillax = utilidades.calculaX(semillax);
                semillay = utilidades.calculaY(semillay);
                semillaz = utilidades.calculaZ(semillaz);
                semillas[i][0] = "" + semillax;
                semillas[i][1] = "" + semillay;
                semillas[i][2] = "" + semillaz;
                semillas[i][3] = "" + ((semillax / 30269) + (semillay / 30307) + (semillaz / 30323));
                numerosAleatorios[i] = ((semillax / 30269) + (semillay / 30307) + (semillaz / 30323));
            }

            String[] columnas = {"semilla X", "semilla Y", "semilla Z", "U"};
            JTable table = new JTable(semillas, columnas);
            table.setVisible(true);

            JFrame frame = new JFrame("JTable Test Display");

            JPanel panel = new JPanel();
            panel.setLayout(new BorderLayout());

            JScrollPane tableContainer = new JScrollPane(table);

            panel.add(tableContainer, BorderLayout.CENTER);
            frame.getContentPane().add(panel);

            frame.pack();
            frame.setVisible(true);
            if (rbtnPromedios.isSelected()) {
                promedios.prueba(numerosAleatorios);
            } else if (rbtnKolmogorov.isSelected()) {
                kolgomorov.prueba(numerosAleatorios, 1.96, numerosAleatorios.length);
            }else if(rbtnSeries.isSelected()){
                pruebasSeries.prueba(numerosAleatorios, 5, 0.05, numerosAleatorios.length);
            }

        } else if (rbtnOtro.isSelected()) {
            String semilla = txtSemilla.getText();
            int periodo = Integer.parseInt(txtPeriodo.getText());
            String[][] semillas = new String[periodo][1];
            Double[] numerosAleatorios = new Double[periodo];
            if (semilla.length() > 1) {
                for (int i = 0; i < periodo; i++) {
                    numerosAleatorios[i] = Double.parseDouble(semilla);
                    Utilidades utilidades = new Utilidades();
                    semilla = utilidades.muestraSemilla(Double.parseDouble(semilla), semilla.length());
                    semillas[i][0] = semilla;
                }
                String[] columnas = {"semilla X"};
                JTable table = new JTable(semillas, columnas);
                table.setVisible(true);

                JFrame frame = new JFrame("JTable Test Display");

                JPanel panel = new JPanel();
                panel.setLayout(new BorderLayout());

                JScrollPane tableContainer = new JScrollPane(table);

                panel.add(tableContainer, BorderLayout.CENTER);
                frame.getContentPane().add(panel);

                frame.pack();
                frame.setVisible(true);
                if (rbtnPromedios.isSelected()) {
                    promedios.prueba(numerosAleatorios);
                } else if (rbtnKolmogorov.isSelected()) {
                    kolgomorov.prueba(numerosAleatorios, 1.96, numerosAleatorios.length);
                }else if(rbtnSeries.isSelected()){
                pruebasSeries.prueba(numerosAleatorios, 5, 0.05, numerosAleatorios.length);
            }
            } else {
                System.out.println("Recuerde que debe ingresar un numero de mas de dos digitos.");
            }
        }


    }//GEN-LAST:event_btnProcesarActionPerformed

    private void txtSemillayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemillayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemillayActionPerformed

    private void rbtnOtroStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbtnOtroStateChanged

    }//GEN-LAST:event_rbtnOtroStateChanged

    private void rbtnLecugerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbtnLecugerStateChanged


    }//GEN-LAST:event_rbtnLecugerStateChanged

    private void rbtnLecugerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnLecugerActionPerformed
        if (rbtnLecuger.isSelected()) {
            lblSemillax.setText("Semilla x");
            lblSemillaY.setEnabled(true);
            txtSemillay.setEnabled(true);
            lblSemillaZ.setEnabled(false);
            txtSemillaZ.setEnabled(false);
        }
    }//GEN-LAST:event_rbtnLecugerActionPerformed

    private void rbtnCongruencialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCongruencialActionPerformed
        if (rbtnCongruencial.isSelected()) {
            lblSemillax.setText("Semilla");
            lblSemillaY.setEnabled(false);
            txtSemillay.setEnabled(false);
            lblSemillaZ.setEnabled(false);
            txtSemillaZ.setEnabled(false);
        }
    }//GEN-LAST:event_rbtnCongruencialActionPerformed

    private void txtSemillaZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemillaZActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemillaZActionPerformed

    private void rbtnWichmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnWichmanActionPerformed
        if (rbtnWichman.isSelected()) {
            lblSemillax.setText("Semilla X");
            lblSemillaY.setEnabled(true);
            txtSemillay.setEnabled(true);
            lblSemillaZ.setEnabled(true);
            txtSemillaZ.setEnabled(true);
        }
    }//GEN-LAST:event_rbtnWichmanActionPerformed

    private void rbtnOtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnOtroActionPerformed
        if (rbtnOtro.isSelected()) {
            lblSemillax.setText("Semilla");
            lblSemillaY.setEnabled(false);
            txtSemillay.setEnabled(false);
            lblSemillaZ.setEnabled(false);
            txtSemillaZ.setEnabled(false);
        }
    }//GEN-LAST:event_rbtnOtroActionPerformed

    private void rbtnPromediosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnPromediosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnPromediosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcesar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblSemillaY;
    private javax.swing.JLabel lblSemillaZ;
    private javax.swing.JLabel lblSemillax;
    private javax.swing.JRadioButton rbtnCongruencial;
    private javax.swing.JRadioButton rbtnKolmogorov;
    private javax.swing.JRadioButton rbtnLecuger;
    private javax.swing.JRadioButton rbtnOtro;
    private javax.swing.JRadioButton rbtnPromedios;
    private javax.swing.JRadioButton rbtnSeries;
    private javax.swing.JRadioButton rbtnWichman;
    private javax.swing.JTextField txtPeriodo;
    private javax.swing.JTextField txtSemilla;
    private javax.swing.JTextField txtSemillaZ;
    private javax.swing.JTextField txtSemillay;
    // End of variables declaration//GEN-END:variables
}
